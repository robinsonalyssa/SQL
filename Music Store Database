##In this project I utilized SQL to query a database that includes mulitple related tables of data, to answer the following questions regarding said data.
## This database includes data from a music store which includes but not limited to data on invoices, customers, employees, and songs.

#1. Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").
SELECT firstname, lastname, customerid, country from chinook.customers
WHERE country != 'US';

#2. Show only the Customers from Brazil.
SELECT * from chinook.customers
WHERE country = 'Brazil';

#3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT cust.firstname, cust.lastname, inv.invoiceid, inv.invoicedate, inv.billingcountry from chinook.customers cust
JOIN chinook.invoices inv
ON cust.customerid = inv.customerid
WHERE cust.country = 'Brazil';

#4. Show the Employees who are Sales Agents.
SELECT employeeid, lastname, firstname, title from chinook.employees
WHERE title LIKE 'sa% ag%';

#5. Find a unique/distinct list of billing countries from the Invoice table.
SELECT billingcountry from chinook.invoices
GROUP BY billingcountry;

#6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT emp.lastname, emp.firstname, inv.invoiceid, inv.total from chinook.employees emp
JOIN chinook.customers cust
ON emp.employeeid = cust.supportrepid
JOIN chinook.invoices inv
ON inv.customerid = cust.customerid;

#7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT inv.total, cust.lastname as 'cust.lastname', cust.firstname as 'cust.firstname', cust.country, emp.lastname as 'emp.lastname', emp.firstname as 'emp.firstname' from chinook.invoices inv
JOIN chinook.customers cust
ON inv.customerid = cust.customerid
JOIN chinook.employees emp
ON emp.employeeid = cust.supportrepid;

#8. How many Invoices were there in 2009?
SELECT COUNT (invoiceid) from chinook.invoices
WHERE invoicedate LIKE '2009%';

#9. What are the total sales for 2009?
SELECT SUM (total) from chinook.invoices
WHERE invoicedate LIKE '2009%';

#10. Write a query that includes the purchased track name with each invoice line item.
SELECT t.name, i.invoicelineid from chinook.tracks t
JOIN chinook.invoice_items i
ON t.trackid = i.trackid;

#11. Write a query that includes the purchased track name AND artist name with each invoice line item.
SELECT t.name as 'song_title', a.name as 'artist_name', i.invoicelineid from chinook.tracks t
JOIN chinook.invoice_items i
ON t.trackid = i.trackid
JOIN chinook.albums
ON t.albumid = albums.AlbumId
JOIN chinook.artists a
ON albums.artistid = a.artistid;

#12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.name as 'song title', albums.title as 'album title', mt.name as'media type', g.name as 'genre' from chinook.tracks t
JOIN chinook.albums
ON t.albumid = albums.AlbumId
JOIN chinook.media_types mt
ON t.mediatypeid = mt.mediatypeid
JOIN chinook.genres g
ON t.genreid = g.genreid;

#13. Show the total sales made by each sales agent.
SELECT ROUND (SUM (i.total) )as 'total sales', e.lastname, e.firstname from chinook.employees e
JOIN chinook.customers c
ON e.employeeid = c.supportrepid
JOIN chinook.invoices i
ON i.customerid = c.customerid
GROUP by e.firstname; j=833, m=775, s=720

#14. Which sales agent made the most in sales in 2009?
SELECT ROUND (SUM (i.total),2)as 'total sales', e.lastname, e.firstname from chinook.employees e
JOIN chinook.customers c
ON e.employeeid = c.supportrepid
JOIN chinook.invoices i
ON i.customerid = c.customerid
WHERE i.invoicedate LIKE '2009%'
GROUP by e.firstname
ORDER BY ROUND(SUM(i.total),2) DESC LIMIT 1;

#15. How many times was each song bought?
SELECT COUNT (invi.trackid) as 'times bought', t.name as 'track name', from chinook.tracks t
JOIN chinook.invoice_items invi
ON t.trackid = invi.trackid
GROUP BY invi.trackid;

#16. How many times does each song appear in a playlist?
SELECT t.name as 'song', COUNT (pt.trackid) as 'amount' from chinook.tracks t
JOIN chinook.playlist_track pt
ON t.trackid = pt.trackid
GROUP by pt.trackid;

#17. List song names and the playlist names that they appear in.
SELECT t.name as 'song', p.name as 'playlist' from chinook.tracks t
JOIN chinook.playlist_track pt
ON t.trackid = pt.trackid
JOIN chinook.playlists p
ON p.playlistid = pt.playlistid;

#18. Which playlist has the most songs, and how many?
SELECT COUNT (pt.trackid) as 'num_songs', p.name from chinook.playlist_track pt
JOIN chinook.playlists p
ON p.playlistid = pt.playlistid;
